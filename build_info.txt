Building and testing the 16-Bit PSN-ADC-SERIAL board.

1. Solder the parts onto the board. Use a socket for the dsPIC30F3014 microcontroller. You will need to 
deal with 1 SMD part, the ADC chip. A bill of materials can be found in the BOM folder.

2. Before placing the dsPIC30F3014 into the socket you will need to flash the bootloader onto the chip. 
This is done with a programmer that can flash 40-pin dsPIC30F3014 parts. I use one made by ME Labs, Inc. 
I have their older serial version but their U2 USB Programmer should work. The file to flash is 
SdrBoot3014.hex that can be found in hexfiles folder.

3. Once you have the bootloader loaded onto the CPU you can place it into the 40-pin socket and power 
up the board. You will need a 15VDC to 20VDC power supply. A 15VDC power supply with 500ma or more 
current is perfect to run the board. Do not use a 12VDC supply! The +/-12 volt regulators will not 
work properly below 15V.

4. Set the 6 position switch to the following: 
   SW1 = OFF and SW2 = ON - This will set the baud rate to 38.4k
   SW3 = OFF              - This switch is not used
   SW4 = ON               - This must be on so the host computer can reset the board.

5. When you apply power for the first time the LED should come on. This indicates that the 
microcontroller is running and ready to receive the firmware.

6. Use the DspBoot.exe program, this can be found in the hexfiles folder, to flash the firmware 
onto the dsPIC CPU. You will need to run the DspBoot program using a command line window. The file 
dsdr26_rs232.hex is the current firmware for the board. The DspBoot program only needs three input 
parameters, -p, the port number and the firmware file. 
    
    Example: DspBoot -p 1 dsdr26_rs232.hex

7. If the flashing of the firmware worked correctly the LED should start to blink after DspBoot toggles 
the reset line.

8. Now you need to set the crystal oscillator to 8.0MHz +- a few Hz. This should be done with an accurate 
frequency counter. You will need to use a low capacitance high impedance probe to measure the oscillator 
frequency. I use a MPF102 JFET amplifier can work up to ~10MHZ to make this measurement. Pin 14 on the 
dsPIC30F3014 is the oscillator output pin. Another possibility to measure the frequency is to temporarily 
connect a 74HC14 Hex Schmitt-trigger IC to the board. Connect +5V power and ground to the chip and using a 
very short wire connect the oscillator output to pin 1 of the 74HC14. You can now measure the frequency 
on pin 2 of the 74HC14 with you frequency counter. Make sure connect the other 5 inputs of the 74HC14 to 
ground or +5 so they are not floating.  

If you are using two silver mica fixed capacitors for C26 and C27 you may need to increase or decrease the 
capacitance of C26 or C27 to get the oscillator near 8.0MHZ. You should try and set the frequency within 
+-100hz or 8.0MHZ. I recommend using a variable cap for C27. This makes setting the frequency much easier. 
See the BOM for the Jameco part number. Before setting the frequency you may want to apply power to the 
board for 10-15 minutes to let the crystal oscillator stabilize.    

9. Now you need to adjust the ADC's zero offset and gain. This requires running WinSDR and looking at the 
ADC counts from the converter. We will only make these adjustments using channel 1. The gain and offset 
effect all 8 channels. The input range jumper JP1 should be shorted so the input voltage range will 
be +/- 10V. Removing the jumper will set the input voltage range to +/-5.  

First ground input channel 1 and adjust the OFFSET pot R11 so the ADC counts read 0 +/- 1 count. Now apply 
an accurate +10VDC signal to pin 1 and adjust the SCALE pot so the ADC counts just toggle between 
32766 and 32767.

Once you are done with the ADC scale and offset adjustments you are ready to use the board.

Good luck,
Larry Cochrane
